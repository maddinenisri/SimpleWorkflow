/*
 * File: app/model/Customer.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ins.model.Customer', {
    extend: 'Ext.data.Model',
	requires: ['Ins.model.Address', 'Ext.data.HasManyAssociation'],

    idProperty: 'idProperty',

    fields: [
        {
            name: 'idProperty',
            type: 'int'
        },
        {
            name: 'salutationType'
        },
        {
            name: 'firstName'
        },
        {
            name: 'lastName'
        },
        {
            name: 'middleName'
        },
        {
            name: 'occupation'
        },
        {
            name: 'orgName'
        },
        {
            name: 'incomeSource'
        },
        {
            name: 'birthDate'
        },
        {
            name: 'email'
        },
        {
            name: 'genderType'
        },
        {
        	name: 'maritalStatusType'
        },
        {name: 'pprimary', mapping: 'phoneMapperDto', type: 'string', convert: function(phoneMapperDto) {return (phoneMapperDto != null) ? phoneMapperDto.pprimary : null;}},
        {name: 'homePhone', mapping: 'phoneMapperDto', type: 'string', convert: function(phoneMapperDto) {return (phoneMapperDto != null) ? phoneMapperDto.homePhone : null;}},
        {name: 'workPhone', mapping: 'phoneMapperDto', type: 'string', convert: function(phoneMapperDto) {return (phoneMapperDto != null) ? phoneMapperDto.workPhone: null;}},
        {name: 'cellPhone', mapping: 'phoneMapperDto', type: 'string', convert: function(phoneMapperDto) {return (phoneMapperDto != null) ? phoneMapperDto.cellPhone: null;}},
        {name: 'fax', mapping: 'phoneMapperDto', type: 'string', convert: function(phoneMapperDto) {return (phoneMapperDto != null) ?phoneMapperDto.fax: null;}}
    ],
//    proxy: {
//    	type: 'ajax',
//    	url: '/SimpleWorkflow/flow/customer/all',
//    	method: 'GET',
//    	reader: {
//    		type: 'json',
//    		totalProperty: 'totalCount',
//    		root: 'data',
//    		successProperty: 'success'
//    	}
//    },
    hasMany: {
    	model: 'Ins.model.Customer', 
    	name: 'addresses',
    	foreignKey: 'customerid',
    	associationKey: 'addresses'
    }
});
